{"version":3,"sources":["Redux/Reducers/cartItems.js","Redux/constants.js","Redux/Store.js","assets/common/baseUrl.js","Screens/Products/ProductCard.js","Redux/Actions/cartActions.js","Screens/Products/ProductList.js","Screens/Products/SearchedProducts.js","Screens/Products/CategoryFilter.js","Screens/Products/ProductContainer.js","Screens/Products/SingleProduct.js","Navigators/HomeNavigator.js","Screens/Cart/CartItem.js","Screens/Cart/Cart.js","Shared/CartIcon.js","Screens/Exercises/Counter.js","Navigators/Main.js","Shared/Header.js","App.js"],"names":["cartItems","state","action","type","payload","filter","reducers","combineReducers","Store","createStore","composeWithDevTools","applyMiddleware","ThunkMiddleware","baseURL","width","Dimensions","get","styles","StyleSheet","create","container","height","padding","borderRadius","marginTop","marginBottom","marginLeft","alignItems","elevation","backgroundColor","image","position","top","card","title","fontWeight","fontSize","textAlign","price","color","connect","dispatch","addItemToCart","product","quantity","props","name","countInStock","View","style","Image","resizeMode","source","uri","Text","length","substring","Button","onPress","ProductList","item","TouchableOpacity","navigation","navigate","center","justifyContent","SearchedProducts","productsFiltered","map","key","_id","$oid","avatar","note","description","alignSelf","active","inactive","CategoryFilter","ScrollView","bounces","horizontal","margin","categoryFilter","setActive","categories","indexOf","require","flexWrap","listContainer","flex","flexDirection","ProductContainer","useState","products","setProducts","setProductsFiltered","focus","setFocus","setCategories","productsCtg","setProductsCtg","initialState","setInitialState","loading","setLoading","useFocusEffect","useCallback","axios","then","res","data","catch","error","console","log","searchBar","rounded","placeholder","onFocus","onChangeText","text","i","toLowerCase","includes","searchProduct","ctg","category","FlatList","numColumns","renderItem","keyExtractor","ActivityIndicator","size","imageContainer","contentContainer","contentHeader","contentText","bottomContainer","bottom","left","SingleProduct","route","params","brand","Stack","createStackNavigator","MyStack","Navigator","Screen","component","options","headerShown","HomeNavigator","listItem","body","CartItem","Math","random","emptyContainer","hiddenContainer","hiddenButton","paddingRight","clearCart","removeFromCart","total","forEach","cart","rowMap","renderHiddenItem","disableRightSwipe","previewOpenDelay","friction","tension","leftOpenValue","stopLeftSwipe","rightOpenValue","nagivate","badge","alignContent","right","Tab","createBottomTabNavigator","Main","initialRouteName","screenOptions","keyboardHidesTabBar","showLabel","activeTintColor","tabBarIcon","Cart","TextInput","header","Header","SafeAreaView","App","store","NavigationContainer","LogBox","ignoreAllLogs"],"mappings":"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","file":"static/js/app.44b68127.chunk.js","sourcesContent":["import { ADD_TO_CART, REMOVE_FROM_CART, CLEAR_CART } from \"../constants\";\r\n\r\nconst cartItems = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      return [...state, action.payload];\r\n    case REMOVE_FROM_CART:\r\n      return state.filter((cartItems) => cartItems !== action.payload);\r\n    case CLEAR_CART:\r\n      return (state = []);\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default cartItems;\r\n","export const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport ThunkMiddleware from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\r\n\r\nimport cartItems from \"./Reducers/cartItems\";\r\n\r\nconst reducers = combineReducers({\r\n  cartItems: cartItems,\r\n});\r\n\r\nconst Store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(ThunkMiddleware))\r\n);\r\n\r\nexport default Store;\r\n","import { Platform } from \"react-native\";\r\n\r\nlet baseURL = \"https://my-pos-server.herokuapp.com/api/v1/\";\r\n\r\n// let baseURL = \"\";\r\n\r\n// {\r\n//   Platform.OS == \"android\"\r\n//     ? (baseURL = \"http://10.0.2.2:3000/api/v1/\")\r\n//     : (baseURL = \"http://localhost:3000/api/v1/\");\r\n// }\r\n\r\nexport default baseURL;\r\n","import React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Dimensions,\r\n  Image,\r\n  Text,\r\n  Button,\r\n} from \"react-native\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport * as actions from \"../../Redux/Actions/cartActions\";\r\n\r\nvar { width } = Dimensions.get(\"window\");\r\n\r\nconst ProductCard = (props) => {\r\n  const { name, price, image, countInStock } = props;\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image\r\n        style={styles.image}\r\n        resizeMode=\"contain\"\r\n        source={{\r\n          uri: image\r\n            ? image\r\n            : \"https://cdn.pixabay.com/photo/2012/04/01/17/29/box-23649_960_720.png\",\r\n        }}\r\n      />\r\n      <View style={styles.card} />\r\n      <Text style={styles.title}>\r\n        {name.length > 15 ? name.substring(0, 15 - 3) + \"...\" : name}\r\n      </Text>\r\n      <Text style={styles.price}>${price}</Text>\r\n      {countInStock > 0 ? (\r\n        <View style={{ marginBottom: 60 }}>\r\n          <Button\r\n            title={\"add\"}\r\n            color={\"green\"}\r\n            onPress={() => props.addItemToCart(props)}\r\n          />\r\n        </View>\r\n      ) : (\r\n        <Text style={{ marginTop: 20 }}>Currently Unavailable</Text>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addItemToCart: (product) =>\r\n      dispatch(actions.addToCart({ quantity: 1, product })),\r\n  };\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: width / 2 - 20,\r\n    height: width / 1.7,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    marginTop: 55,\r\n    marginBottom: 5,\r\n    marginLeft: 10,\r\n    alignItems: \"center\",\r\n    elevation: 8,\r\n    backgroundColor: \"white\",\r\n  },\r\n  image: {\r\n    width: width / 2 - 20 - 10,\r\n    height: width / 2 - 20 - 30,\r\n    backgroundColor: \"transparent\",\r\n    position: \"absolute\",\r\n    top: -45,\r\n  },\r\n  card: {\r\n    marginBottom: 10,\r\n    height: width / 2 - 20 - 90,\r\n    backgroundColor: \"transparent\",\r\n    width: width / 2 - 20 - 10,\r\n  },\r\n  title: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 14,\r\n    textAlign: \"center\",\r\n  },\r\n  price: {\r\n    fontSize: 20,\r\n    color: \"orange\",\r\n    marginTop: 10,\r\n  },\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ProductCard);\r\n","import { ADD_TO_CART, REMOVE_FROM_CART, CLEAR_CART } from \"../constants\";\r\n\r\nexport const addToCart = (payload) => {\r\n  return {\r\n    type: ADD_TO_CART,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const removeFromCart = (payload) => {\r\n  return {\r\n    type: REMOVE_FROM_CART,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const clearCart = (payload) => {\r\n  return {\r\n    type: CLEAR_CART,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { TouchableOpacity, View, Dimensions } from \"react-native\";\r\n\r\nimport ProductCard from \"./ProductCard\";\r\n\r\nvar { width, height } = Dimensions.get(\"window\");\r\n\r\nconst ProductList = (props) => {\r\n  const { item } = props;\r\n  return (\r\n    <TouchableOpacity\r\n      style={{ width: \"50%\" }}\r\n      onPress={() =>\r\n        props.navigation.navigate(\"Product Detail\", { item: item })\r\n      }\r\n    >\r\n      <View\r\n        style={{\r\n          width: width / 2,\r\n          backgroundColor: \"gainsboro\",\r\n        }}\r\n      >\r\n        <ProductCard {...item} />\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React from \"react\";\r\nimport { View, StyleSheet, Dimensions } from \"react-native\";\r\nimport { Content, Left, Body, ListItem, Thumbnail, Text } from \"native-base\";\r\n\r\nvar { width } = Dimensions.get(\"window\");\r\n\r\nconst SearchedProducts = (props) => {\r\n  const { productsFiltered } = props;\r\n\r\n  return (\r\n    <Content style={{ width: width }}>\r\n      {productsFiltered.length > 0 ? (\r\n        productsFiltered.map((item) => (\r\n          <ListItem\r\n            onPress={() => {\r\n              props.navigation.navigate(\"Product Detail\", { item: item });\r\n            }}\r\n            key={item._id.$oid}\r\n            avatar\r\n          >\r\n            <Left>\r\n              <Thumbnail\r\n                source={{\r\n                  uri: item.image\r\n                    ? item.image\r\n                    : \"https://cdn.pixabay.com/photo/2012/04/01/17/29/box-23649_960_720.png\",\r\n                }}\r\n              />\r\n            </Left>\r\n            <Body>\r\n              <Text>{item.name}</Text>\r\n              <Text note>{item.description}</Text>\r\n            </Body>\r\n          </ListItem>\r\n        ))\r\n      ) : (\r\n        <View style={styles.center}>\r\n          <Text style={{ marginTop: 10, alignSelf: \"center\" }}>\r\n            No product match the selected criteria\r\n          </Text>\r\n        </View>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  center: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nexport default SearchedProducts;\r\n","import React from \"react\";\r\nimport { StyleSheet, TouchableOpacity, ScrollView } from \"react-native\";\r\nimport { ListItem, Badge, Text } from \"native-base\";\r\n\r\nconst CategoryFilter = (props) => {\r\n  return (\r\n    <ScrollView\r\n      bounces={true}\r\n      horizontal={true}\r\n      style={{ backgroundColor: \"#f2f2f2\" }}\r\n    >\r\n      <ListItem style={{ margin: 0, padding: 0, borderRadius: 0 }}>\r\n        <TouchableOpacity\r\n          key={1}\r\n          onPress={() => {\r\n            props.categoryFilter(\"all\"), props.setActive(-1);\r\n          }}\r\n        >\r\n          <Badge\r\n            style={[\r\n              styles.center,\r\n              { margin: 5 },\r\n              props.active == -1 ? styles.active : styles.inactive,\r\n            ]}\r\n          >\r\n            <Text style={{ color: \"white\" }}>All</Text>\r\n          </Badge>\r\n        </TouchableOpacity>\r\n        {props.categories.map((item) => (\r\n          <TouchableOpacity\r\n            key={item._id}\r\n            onPress={() => {\r\n              props.categoryFilter(item._id),\r\n                props.setActive(props.categories.indexOf(item));\r\n            }}\r\n          >\r\n            <Badge\r\n              style={[\r\n                styles.center,\r\n                { margin: 5 },\r\n                props.active == props.categories.indexOf(item)\r\n                  ? styles.active\r\n                  : styles.inactive,\r\n              ]}\r\n            >\r\n              <Text style={{ color: \"white\" }}> {item.name} </Text>\r\n            </Badge>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </ListItem>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  center: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  active: {\r\n    backgroundColor: \"#03bafc\",\r\n  },\r\n  inactive: {\r\n    backgroundColor: \"#a0e1eb\",\r\n  },\r\n});\r\n\r\nexport default CategoryFilter;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  ActivityIndicator,\r\n  FlatList,\r\n  ScrollView,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { Header, Text, Icon, Input, Item, Container } from \"native-base\";\r\n\r\nimport { useFocusEffect } from \"@react-navigation/native\";\r\n\r\nimport baseURL from \"../../assets/common/baseUrl\";\r\nimport axios from \"axios\";\r\n\r\nimport ProductList from \"./ProductList\";\r\nimport SearchedProducts from \"./SearchedProducts\";\r\n// import Banner from \"../../Shared/Banner\";\r\nimport CategoryFilter from \"./CategoryFilter\";\r\n\r\nvar { height } = Dimensions.get(\"window\");\r\n// const data = require(\"../../assets/data/products.json\");\r\nconst productsCategories = require(\"../../assets/data/categories.json\");\r\n\r\nconst ProductContainer = (props) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [productsFiltered, setProductsFiltered] = useState([]);\r\n  const [focus, setFocus] = useState();\r\n  const [categories, setCategories] = useState([]);\r\n  const [productsCtg, setProductsCtg] = useState([]);\r\n  const [active, setActive] = useState();\r\n  const [initialState, setInitialState] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      setFocus(false);\r\n      setActive(-1);\r\n\r\n      // products\r\n      axios\r\n        .get(`${baseURL}products`)\r\n        .then((res) => {\r\n          setProducts(res.data);\r\n          setProductsFiltered(res.data);\r\n          setProductsCtg(res.data);\r\n          setInitialState(res.data);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"API call error\");\r\n        });\r\n\r\n      // categories\r\n      axios\r\n        .get(`${baseURL}categories`)\r\n        .then((res) => {\r\n          setCategories(res.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"API call error\");\r\n        });\r\n\r\n      return () => {\r\n        setProducts([]);\r\n        setProductsFiltered([]);\r\n        setCategories([]);\r\n        setFocus();\r\n        setActive();\r\n        setInitialState([]);\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  const searchProduct = (text) => {\r\n    setProductsFiltered(\r\n      products.filter((i) => i.name.toLowerCase().includes(text.toLowerCase()))\r\n    );\r\n  };\r\n\r\n  const openList = () => {\r\n    setFocus(true);\r\n  };\r\n\r\n  const onBlur = () => {\r\n    setFocus(false);\r\n  };\r\n\r\n  // Categories\r\n  const changeCtg = (ctg) => {\r\n    {\r\n      ctg === \"all\"\r\n        ? [setProductsCtg(initialState), setActive(true)]\r\n        : [\r\n            setProductsCtg(\r\n              products.filter((i) => i.category._id === ctg),\r\n              setActive(true)\r\n            ),\r\n            ,\r\n          ];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading == false ? (\r\n        <Container>\r\n          <Header searchBar rounded>\r\n            <Item>\r\n              <Icon name=\"ios-search\" />\r\n              <Input\r\n                placeholder=\"Search\"\r\n                onFocus={openList}\r\n                onChangeText={(text) => searchProduct(text)}\r\n              />\r\n              {focus == true ? (\r\n                <Icon onPress={onBlur} name=\"ios-close\" />\r\n              ) : null}\r\n            </Item>\r\n          </Header>\r\n\r\n          {focus == true ? (\r\n            <SearchedProducts\r\n              navigation={props.navigation}\r\n              productsFiltered={productsFiltered}\r\n            />\r\n          ) : (\r\n            <View>\r\n              {/* <View>\r\n                <Banner />\r\n              </View> */}\r\n              <View>\r\n                <CategoryFilter\r\n                  categories={categories}\r\n                  categoryFilter={changeCtg}\r\n                  productsCtg={productsCtg}\r\n                  active={active}\r\n                  setActive={setActive}\r\n                />\r\n\r\n                {productsCtg.length > 0 ? (\r\n                  <View>\r\n                    <FlatList\r\n                      horizontal={false}\r\n                      data={productsCtg}\r\n                      numColumns={2}\r\n                      renderItem={({ item }) => (\r\n                        <ProductList\r\n                          navigation={props.navigation}\r\n                          key={item._id}\r\n                          item={item}\r\n                        />\r\n                      )}\r\n                      keyExtractor={(item) => item.name}\r\n                    />\r\n                  </View>\r\n                ) : (\r\n                  // <View style={styles.listContainer}>\r\n                  //   {productsCtg.map((item) => {\r\n                  //     return (\r\n                  //       <ProductList\r\n                  //         navigation={props.navigation}\r\n                  //         key={item.id}\r\n                  //         item={item}\r\n                  //       />\r\n                  //     );\r\n                  //   })}\r\n                  // </View>\r\n                  <View style={[styles.center, { height: 80 }]}>\r\n                    <Text>No products found</Text>\r\n                  </View>\r\n                )}\r\n              </View>\r\n              {/* <View style={styles.listContainer}>\r\n            <FlatList\r\n              horizontal={false}\r\n              data={products}\r\n              numColumns={2}\r\n              renderItem={({ item }) => (\r\n                <ProductList key={item._id.$oid} item={item} />\r\n              )}\r\n              keyExtractor={(item) => item.name}\r\n            />\r\n          </View> */}\r\n            </View>\r\n          )}\r\n        </Container>\r\n      ) : (\r\n        // loading\r\n        <Container style={[styles.center, { backgroundColor: \"#f2f2f2\" }]}>\r\n          <ActivityIndicator size=\"large\" color=\"red\" />\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexWrap: \"wrap\",\r\n    backgroundColor: \"gainsboro\",\r\n  },\r\n  listContainer: {\r\n    height: height,\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    alignItems: \"flex-start\",\r\n    flexWrap: \"wrap\",\r\n    backgroundColor: \"gainsboro\",\r\n  },\r\n  center: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nexport default ProductContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Image,\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  Button,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Left, Right, H1, Container } from \"native-base\";\r\n\r\nconst SingleProduct = (props) => {\r\n  const [item, setItem] = useState(props.route.params.item);\r\n  const [availability, setAvailability] = useState(null);\r\n\r\n  return (\r\n    <Container style={styles.container}>\r\n      <ScrollView style={{ marginBottom: 80, padding: 5 }}>\r\n        <View style={styles.imageContainer}>\r\n          <Image\r\n            source={{\r\n              uri: item.image\r\n                ? item.image\r\n                : \"https://cdn.pixabay.com/photo/2012/04/01/17/29/box-23649_960_720.png\",\r\n            }}\r\n            resizeMode=\"contain\"\r\n            style={styles.image}\r\n          />\r\n          <View style={styles.contentContainer}>\r\n            <H1 style={styles.contentHeader}>{item.name}</H1>\r\n            <Text style={styles.contentText}>{item.brand}</Text>\r\n          </View>\r\n        </View>\r\n        {/* TODO: description, availability, rich description */}\r\n      </ScrollView>\r\n      <View style={styles.bottomContainer}>\r\n        <Left>\r\n          <Text style={styles.price}>${item.price}</Text>\r\n        </Left>\r\n        <Right>\r\n          <Button title=\"Add\" />\r\n        </Right>\r\n      </View>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: \"relative\",\r\n    height: \"100%\",\r\n  },\r\n  imageContainer: {\r\n    backgroundColor: \"white\",\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    height: 250,\r\n  },\r\n  contentContainer: {\r\n    marginTop: 20,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  contentHeader: {\r\n    fontWeight: \"bold\",\r\n    marginBottom: 20,\r\n  },\r\n  contentText: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 20,\r\n  },\r\n  bottomContainer: {\r\n    flexDirection: \"row\",\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    left: 0,\r\n    backgroundColor: \"white\",\r\n  },\r\n  price: {\r\n    fontSize: 24,\r\n    margin: 20,\r\n    color: \"red\",\r\n  },\r\n});\r\nexport default SingleProduct;\r\n","import React from \"react\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n\r\nimport ProductContainer from \"../Screens/Products/ProductContainer\";\r\nimport SingleProduct from \"../Screens/Products/SingleProduct\";\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nfunction MyStack() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"Products\"\r\n        component={ProductContainer}\r\n        options={{\r\n          headerShown: false,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"Product Detail\"\r\n        component={SingleProduct}\r\n        options={{\r\n          headerShown: false,\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nexport default function HomeNavigator() {\r\n  return <MyStack />;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { Left, Text, Right, ListItem, Thumbnail, Body } from \"native-base\";\r\n\r\nconst CartItem = (props) => {\r\n  console.log(props);\r\n  const data = props.item.item.product;\r\n  const [quantity, setQuantity] = useState(props.item.quantity);\r\n  return (\r\n    <ListItem style={styles.listItem} key={Math.random()} avatar>\r\n      <Left>\r\n        <Thumbnail\r\n          source={{\r\n            uri: data.image\r\n              ? data.image\r\n              : \"https://cdn.pixabay.com/photo/2012/04/01/17/29/box-23649_960_720.png\",\r\n          }}\r\n        />\r\n      </Left>\r\n      <Body style={styles.body}>\r\n        <Left>\r\n          <Text>{data.name}</Text>\r\n        </Left>\r\n        <Right>\r\n          <Text>$ {data.price}</Text>\r\n        </Right>\r\n      </Body>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  listItem: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n    justifyContent: \"center\",\r\n  },\r\n  body: {\r\n    margin: 10,\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n});\r\n\r\nexport default CartItem;\r\n","import React from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Dimensions,\r\n  Button,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport {\r\n  Container,\r\n  Text,\r\n  Left,\r\n  Right,\r\n  H1,\r\n  ListItem,\r\n  Thumbnail,\r\n  Body,\r\n} from \"native-base\";\r\n\r\nimport { SwipeListView } from \"react-native-swipe-list-view\";\r\nimport CartItem from \"./CartItem\";\r\n\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../Redux/Actions/cartActions\";\r\n\r\nvar { height, width } = Dimensions.get(\"window\");\r\n\r\nconst Cart = (props) => {\r\n  var total = 0;\r\n  props.cartItems.forEach((cart) => {\r\n    return (total += cart.product.price);\r\n  });\r\n  return (\r\n    <>\r\n      {props.cartItems.length ? (\r\n        <Container>\r\n          <H1 style={{ alignSelf: \"center\" }}>Cart</H1>\r\n          <SwipeListView\r\n            data={props.cartItems}\r\n            renderItem={(data, rowMap) => <CartItem item={data} />}\r\n            renderHiddenItem={(data, rowMap) => (\r\n              <View style={styles.hiddenContainer}>\r\n                <TouchableOpacity\r\n                  style={styles.hiddenButton}\r\n                  onPress={() => props.removeFromCart(data.item)}\r\n                >\r\n                  <Icon name=\"trash\" color={\"white\"} size={30} />\r\n                </TouchableOpacity>\r\n              </View>\r\n            )}\r\n            disableRightSwipe={true}\r\n            previewOpenDelay={3000}\r\n            friction={1000}\r\n            tension={40}\r\n            leftOpenValue={75}\r\n            stopLeftSwipe={75}\r\n            rightOpenValue={-75}\r\n          />\r\n          <View style={styles.bottomContainer}>\r\n            <Left>\r\n              <Text style={styles.price}>$ {total}</Text>\r\n            </Left>\r\n            <Right>\r\n              <Button title=\"Clear\" onPress={() => props.clearCart()} />\r\n            </Right>\r\n            <Right>\r\n              <Button\r\n                title=\"Checkout\"\r\n                onPress={() => props.navigation.nagivate(\"Checkout\")}\r\n              />\r\n            </Right>\r\n          </View>\r\n        </Container>\r\n      ) : (\r\n        <Container style={styles.emptyContainer}>\r\n          <Text>Looks like your cart is empty</Text>\r\n          <Text>Add products to your cart to get started</Text>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { cartItems } = state;\r\n  return {\r\n    cartItems: cartItems,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    clearCart: () => dispatch(actions.clearCart()),\r\n    removeFromCart: (item) => dispatch(actions.removeFromCart(item)),\r\n  };\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  emptyContainer: {\r\n    height: height,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  bottomContainer: {\r\n    flexDirection: \"row\",\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    left: 0,\r\n    backgroundColor: \"white\",\r\n    elevation: 20,\r\n  },\r\n  price: {\r\n    fontSize: 18,\r\n    margin: 20,\r\n    color: \"red\",\r\n  },\r\n  hiddenContainer: {\r\n    flex: 1,\r\n    justifyContent: \"flex-end\",\r\n    flexDirection: \"row\",\r\n  },\r\n  hiddenButton: {\r\n    backgroundColor: \"red\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n    paddingRight: 25,\r\n    height: 70,\r\n    width: width / 1.2,\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n","import React from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { Badge, Text } from \"native-base\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CartIcon = (props) => {\r\n  return (\r\n    <>\r\n      {props.cartItems.length ? (\r\n        <Badge style={styles.badge}>\r\n          <Text style={styles.text}>{props.cartItems.length}</Text>\r\n        </Badge>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { cartItems } = state;\r\n\r\n  return {\r\n    cartItems: cartItems,\r\n  };\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  badge: {\r\n    width: 25,\r\n    position: \"absolute\",\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignContent: \"center\",\r\n    top: -4,\r\n    right: -15,\r\n  },\r\n  text: {\r\n    fontSize: 12,\r\n    width: 100,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\nexport default connect(mapStateToProps)(CartIcon);\r\n","import React, { useReducer } from \"react\";\r\nimport { View, Text, Button } from \"react-native\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"increment\":\r\n      return { ...state, count: state.count + action.payload };\r\n    case \"decrement\":\r\n      return { ...state, count: state.count - action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst Counter = () => {\r\n  const [state, dispatch] = useReducer(reducer, { count: 0 });\r\n\r\n  return (\r\n    <View>\r\n      <Button\r\n        title=\"Increase\"\r\n        onPress={() => {\r\n          dispatch({ type: \"increment\", payload: 1 });\r\n        }}\r\n      />\r\n      <Button\r\n        title=\"Decrease\"\r\n        onPress={() => {\r\n          dispatch({ type: \"decrement\", payload: 1 });\r\n        }}\r\n      />\r\n      <Text>{state.count}</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { TextInput, View } from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\n\r\n// Stacks\r\nimport HomeNavigator from \"./HomeNavigator\";\r\nimport Cart from \"../Screens/Cart/Cart\";\r\nimport CartIcon from \"../Shared/CartIcon\";\r\nimport Counter from \"../Screens/Exercises/Counter\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst Main = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"Home\"\r\n      screenOptions={{\r\n        keyboardHidesTabBar: true,\r\n        showLabel: false,\r\n        activeTintColor: \"#e91e63\",\r\n      }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Home\"\r\n        component={HomeNavigator}\r\n        options={{\r\n          tabBarIcon: ({ color }) => (\r\n            <Icon\r\n              name=\"home\"\r\n              style={{ position: \"relative\" }}\r\n              color={color}\r\n              size={30}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Cart\"\r\n        component={Cart}\r\n        options={{\r\n          tabBarIcon: ({ color }) => (\r\n            <View>\r\n              <Icon name=\"shopping-cart\" color={color} size={30} />\r\n              <CartIcon />\r\n            </View>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Admin\"\r\n        component={HomeNavigator}\r\n        options={{\r\n          tabBarIcon: ({ color }) => (\r\n            <Icon name=\"cog\" color={color} size={30} />\r\n          ),\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"User\"\r\n        component={TextInput}\r\n        options={{\r\n          tabBarIcon: ({ color }) => (\r\n            <Icon name=\"user\" color={color} size={30} />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { StyleSheet, Image, SafeAreaView } from \"react-native\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <SafeAreaView style={styles.header}>\r\n      <Image\r\n        source={{ uri: \"https://i.ytimg.com/vi/neXk3we-y6E/maxresdefault.jpg\" }}\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n  },\r\n});\r\nexport default Header;\r\n","import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { LogBox } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\n// import { createBrowserApp } from \"@react-navigation/web\";\n// import { Platform } from \"react-native\";\n\n// const createApp = Platform.select({\n//   web: (config) => createBrowserApp(config, { history: \"hash\" }),\n//   default: (config) => NavigationContainer(config),\n// });\n\n// Redux\nimport { Provider } from \"react-redux\";\nimport Store from \"./Redux/Store\";\n\n//Navigation\nimport Main from \"./Navigators/Main\";\n\n// Screens\nimport Header from \"./Shared/Header\";\n\nLogBox.ignoreAllLogs(true);\n\nexport default function App() {\n  return (\n    <Provider store={Store}>\n      <NavigationContainer>\n        <Header />\n        <Main />\n      </NavigationContainer>\n    </Provider>\n  );\n}\n"],"sourceRoot":""}